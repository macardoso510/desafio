{"version":3,"sources":["Masks.ts"],"names":["BRL_CAR_PLATE","BRL_CNPJ","BRL_CPF","BRL_CPF_CNPJ","text","rawValue","replace","length","BRL_CURRENCY","prefix","separator","delimiter","precision","BRL_PHONE","CREDIT_CARD","DATE_DDMMYYYY","DATE_MMDDYYYY","DATE_YYYYMMDD","ZIP_CODE"],"mappings":"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","sourcesContent":["import createNumberMask from './createNumberMask';\nimport type { MaskArray } from './formatWithMask.types';\n\nconst BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, '-', /\\d/, /\\w/, /\\d/, /\\d/];\n\nconst BRL_CNPJ = [\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '/',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst BRL_CPF = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst BRL_CPF_CNPJ = (text?: string) => {\n  const rawValue = text?.replace(/\\D+/g, '') || '';\n  return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\n};\n\nconst BRL_CURRENCY = createNumberMask({\n  prefix: ['R', '$', ' '],\n  separator: ',',\n  delimiter: '.',\n  precision: 2,\n});\n\nconst BRL_PHONE = [\n  '(',\n  /\\d/,\n  /\\d/,\n  ')',\n  ' ',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nconst CREDIT_CARD = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  ' ',\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  ' ',\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  ' ',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n] as MaskArray;\n\nconst DATE_DDMMYYYY = [/[0-3]/, /\\d/, '/', /[0-1]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_MMDDYYYY = [/[0-1]/, /\\d/, '/', /[0-3]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_YYYYMMDD = [/\\d/, /\\d/, /\\d/, /\\d/, '/', /[0-1]/, /\\d/, '/', /[0-3]/, /\\d/];\nconst ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\n\nexport default {\n  BRL_CAR_PLATE,\n  BRL_CNPJ,\n  BRL_CPF,\n  BRL_CPF_CNPJ,\n  BRL_CURRENCY,\n  BRL_PHONE,\n  CREDIT_CARD,\n  DATE_DDMMYYYY,\n  DATE_MMDDYYYY,\n  DATE_YYYYMMDD,\n  ZIP_CODE,\n};\n"]}
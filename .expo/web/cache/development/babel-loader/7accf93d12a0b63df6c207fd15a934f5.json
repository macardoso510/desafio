{"ast":null,"code":"import React, { useEffect, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { useNavigation } from '@react-navigation/native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default (function (props) {\n  var navigation = useNavigation();\n  var acoes = props.dado.text;\n  var resgate = props.dado.value;\n  console.log('resgate', resgate.saldoTotal);\n\n  function dePara(item) {\n    if (item === \"Banco do Brasil (BBAS3)\") return 'BBAS3';\n    if (item === \"Vale (VALE3)\") return 'VALE3';\n    if (item === \"Petrobras (PETR4)\") return 'PETR4';\n    if (item === \"Cemig (CMIG3)\") return 'CMIG3';\n    if (item === \"Oi (OIBR3)\") return 'OIBR3';\n    return 'faltou' + item;\n  }\n\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsxs(View, {\n      style: styles.modal,\n      children: [_jsxs(View, {\n        style: styles.corpo,\n        children: [_jsx(Text, {\n          style: styles.text,\n          children: \"DADOS INV\\xC1LIDOS\"\n        }), _jsx(Text, {\n          style: {\n            fontSize: 14,\n            textAlign: 'center',\n            justifyContent: 'flex-end'\n          },\n          children: \"Voc\\xEA preencheu um ou mais campos com valor acima do permitido\"\n        })]\n      }), acoes.map(function (dado, i) {\n        return _jsx(View, {\n          children: _jsxs(Text, {\n            style: {\n              fontSize: 14,\n              textAlign: 'center',\n              justifyContent: 'flex-start'\n            },\n            children: [dado && dado.nome, \" Valor m\\xE1ximo de \", (resgate.saldoTotal * resgate.acoes[i].percentual / 100).toLocaleString('pt-br', {\n              style: 'currency',\n              currency: 'BRL'\n            })]\n          })\n        }, i);\n      }), _jsx(View, {\n        style: styles.button,\n        children: _jsx(Button, {\n          style: {\n            backgroundColor: 'red',\n            color: 'red',\n            fontWeight: 'bold'\n          },\n          title: \"NOVO RESGATE\",\n          onPress: function onPress() {\n            return navigation.goBack('ResgateInvestimento');\n          }\n        })\n      })]\n    })\n  });\n});\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 15\n  },\n  modal: {\n    backgroundColor: '#F5FFFA',\n    width: '100%',\n    height: 350\n  },\n  text: {\n    textAlign: 'center',\n    justifyContent: 'flex-end',\n    fontSize: 20\n  },\n  button: {\n    justifyContent: 'flex-end',\n    backgroundColor: '#FFF003',\n    color: '1e72b0',\n    fontWeight: 'bold'\n  },\n  corpo: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"sources":["/home/rafadesk/Documentos/Mateus/git/desafio/src/modais/ErrorResgate.js"],"names":["React","useEffect","useState","useNavigation","props","navigation","acoes","dado","text","resgate","value","console","log","saldoTotal","dePara","item","styles","container","modal","corpo","fontSize","textAlign","justifyContent","map","i","nome","percentual","toLocaleString","style","currency","button","backgroundColor","color","fontWeight","goBack","StyleSheet","create","flex","alignItems","margin","width","height"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Text, View, StyleSheet, FlatList, TouchableOpacity, Button } from 'react-native'\nimport { useNavigation } from '@react-navigation/native';\n\n\n\nexport default props => {\n    const navigation = useNavigation();\n\n    const acoes = props.dado.text;\n    const resgate = props.dado.value;\n\n    console.log('resgate', resgate.saldoTotal)\n\n    function dePara(item) {\n        if (item === \"Banco do Brasil (BBAS3)\") return 'BBAS3';\n        if (item === \"Vale (VALE3)\") return 'VALE3';\n        if (item === \"Petrobras (PETR4)\") return 'PETR4';\n        if (item === \"Cemig (CMIG3)\") return 'CMIG3';\n        if (item === \"Oi (OIBR3)\") return 'OIBR3';\n\n        return 'faltou' + item;\n    }\n\n    return (\n        <View style={styles.container}>\n            <View style={styles.modal}>\n                <View style={styles.corpo}>\n                    <Text style={styles.text}>DADOS INVÁLIDOS</Text>\n                    <Text style={{\n                        fontSize: 14,\n                        textAlign: 'center',\n                        justifyContent: 'flex-end',\n                    }}>Você preencheu um ou mais campos com valor acima do permitido</Text>\n                </View>\n                {acoes.map((dado, i) =>\n                    <View\n                        key={i}\n                    >\n                        <Text style={{\n                            fontSize: 14,\n                            textAlign: 'center',\n                            justifyContent: 'flex-start',\n                        }}>{dado && dado.nome} Valor máximo de {(resgate.saldoTotal * resgate.acoes[i].percentual / 100).toLocaleString('pt-br', { style: 'currency', currency: 'BRL' })}</Text>\n                        {/* <Text> {dado.nome} Valor máximo de </Text>  */}\n                    </View>\n                )}\n                <View style={styles.button}>\n                    <Button style={{ backgroundColor: 'red', color: 'red', fontWeight: 'bold' }} title='NOVO RESGATE' onPress={() => navigation.goBack('ResgateInvestimento')} />\n                    {/* <Button title='CORRIGIR' onPress={() => console.log('resgate.acoes[i]', resgate.acoes[i], 'resgate.saldoTotal', resgate.saldoTotal)} /> */}\n                </View>\n\n            </View>\n\n\n        </View>\n\n\n    )\n\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n        margin: 15\n    },\n    modal: {\n        backgroundColor: '#F5FFFA',\n        width: '100%',\n        height: 350,\n    },\n    text: {\n        textAlign: 'center',\n        justifyContent: 'flex-end',\n        fontSize: 20\n    },\n    button: {\n        justifyContent: 'flex-end',\n        backgroundColor: '#FFF003',\n        color: '1e72b0',\n        fontWeight: 'bold'\n    },\n    corpo: {\n        flex: 1,\n        justifyContent: 'center',\n        alignItems: 'center',\n\n    }\n});"]},"metadata":{},"sourceType":"module"}
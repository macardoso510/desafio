{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ResgateInvestimento from \"./ResgateInvestimento\";\nimport { Icon } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function Confirmacao(navigation) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      modalVisible = _useState4[0],\n      setModalVisible = _useState4[1];\n\n  useEffect(function () {\n    console.log('value', value);\n  }, []);\n  return _jsxs(View, {\n    style: styles.centeredView,\n    children: [_jsx(View, {\n      style: styles.centeredView,\n      children: _jsxs(View, {\n        style: styles.modalView,\n        children: [_jsx(Text, {\n          style: styles.modalText,\n          children: \"Hello World!\"\n        }), _jsx(Pressable, {\n          style: [styles.button, styles.buttonClose],\n          onPress: function onPress() {\n            return setModalVisible(!modalVisible);\n          },\n          children: _jsx(Text, {\n            style: styles.textStyle,\n            children: \"Hide Modal\"\n          })\n        })]\n      })\n    }), _jsx(Pressable, {\n      style: [styles.button, styles.buttonOpen],\n      onPress: function onPress() {\n        return setModalVisible(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textStyle,\n        children: \"Show Modal\"\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  centeredView: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 22\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 35,\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5\n  },\n  button: {\n    borderRadius: 20,\n    padding: 10,\n    elevation: 2\n  },\n  buttonOpen: {\n    backgroundColor: \"#F194FF\"\n  },\n  buttonClose: {\n    backgroundColor: \"#2196F3\"\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\"\n  },\n  modalText: {\n    marginBottom: 15,\n    textAlign: \"center\"\n  }\n});","map":{"version":3,"sources":["/home/rafadesk/Documentos/Mateus/git/desafio/src/modais/Error.js"],"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","ResgateInvestimento","Icon","Stack","Confirmacao","navigation","value","setValue","modalVisible","setModalVisible","console","log","styles","centeredView","modalView","modalText","button","buttonClose","textStyle","buttonOpen","StyleSheet","create","flex","justifyContent","alignItems","marginTop","margin","backgroundColor","borderRadius","padding","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","color","fontWeight","textAlign","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, FlatList, SafeAreaView, Modal, StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ResgateInvestimento from './ResgateInvestimento'\n\nimport { Icon } from 'react-native-elements';\nconst Stack = createNativeStackNavigator();\n\n\nexport default function Confirmacao(navigation) {\n    const [value, setValue] = useState([]);\n    const [modalVisible, setModalVisible] = useState(false);\n\n    useEffect(() => {\n        // console.log(\"navigation\", navigation.navigation)\n\n        console.log('value', value)\n    }, []);\n\n    return (\n        <View style={styles.centeredView}>\n\n            <View style={styles.centeredView}>\n                <View style={styles.modalView}>\n                    <Text style={styles.modalText}>Hello World!</Text>\n                    <Pressable\n                        style={[styles.button, styles.buttonClose]}\n                        onPress={() => setModalVisible(!modalVisible)}\n                    >\n                        <Text style={styles.textStyle}>Hide Modal</Text>\n                    </Pressable>\n                </View>\n            </View>\n\n            <Pressable\n                style={[styles.button, styles.buttonOpen]}\n                onPress={() => setModalVisible(true)}\n            >\n                <Text style={styles.textStyle}>Show Modal</Text>\n            </Pressable>\n        </View>\n    );\n}\n\nconst styles = StyleSheet.create({\n    centeredView: {\n        flex: 1,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        marginTop: 22\n    },\n    modalView: {\n        margin: 20,\n        backgroundColor: \"white\",\n        borderRadius: 20,\n        padding: 35,\n        alignItems: \"center\",\n        shadowColor: \"#000\",\n        shadowOffset: {\n            width: 0,\n            height: 2\n        },\n        shadowOpacity: 0.25,\n        shadowRadius: 4,\n        elevation: 5\n    },\n    button: {\n        borderRadius: 20,\n        padding: 10,\n        elevation: 2\n    },\n    buttonOpen: {\n        backgroundColor: \"#F194FF\",\n    },\n    buttonClose: {\n        backgroundColor: \"#2196F3\",\n    },\n    textStyle: {\n        color: \"white\",\n        fontWeight: \"bold\",\n        textAlign: \"center\"\n    },\n    modalText: {\n        marginBottom: 15,\n        textAlign: \"center\"\n    }\n\n});\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import createNumberMask from \"./createNumberMask\";\nvar BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, '-', /\\d/, /\\w/, /\\d/, /\\d/];\nvar BRL_CNPJ = [/\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\nvar BRL_CPF = [/\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '.', /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/];\n\nvar BRL_CPF_CNPJ = function BRL_CPF_CNPJ(text) {\n  var rawValue = (text === null || text === void 0 ? void 0 : text.replace(/\\D+/g, '')) || '';\n  return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\n};\n\nvar BRL_CURRENCY = createNumberMask({\n  prefix: ['R', '$', ' '],\n  separator: ',',\n  delimiter: '.',\n  precision: 2\n});\nvar BRL_PHONE = ['(', /\\d/, /\\d/, ')', ' ', /\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/, /\\d/];\nvar CREDIT_CARD = [/\\d/, /\\d/, /\\d/, /\\d/, ' ', [/\\d/], [/\\d/], [/\\d/], [/\\d/], ' ', [/\\d/], [/\\d/], [/\\d/], [/\\d/], ' ', /\\d/, /\\d/, /\\d/, /\\d/];\nvar DATE_DDMMYYYY = [/[0-3]/, /\\d/, '/', /[0-1]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nvar DATE_MMDDYYYY = [/[0-1]/, /\\d/, '/', /[0-3]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nvar DATE_YYYYMMDD = [/\\d/, /\\d/, /\\d/, /\\d/, '/', /[0-1]/, /\\d/, '/', /[0-3]/, /\\d/];\nvar ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\nexport default {\n  BRL_CAR_PLATE: BRL_CAR_PLATE,\n  BRL_CNPJ: BRL_CNPJ,\n  BRL_CPF: BRL_CPF,\n  BRL_CPF_CNPJ: BRL_CPF_CNPJ,\n  BRL_CURRENCY: BRL_CURRENCY,\n  BRL_PHONE: BRL_PHONE,\n  CREDIT_CARD: CREDIT_CARD,\n  DATE_DDMMYYYY: DATE_DDMMYYYY,\n  DATE_MMDDYYYY: DATE_MMDDYYYY,\n  DATE_YYYYMMDD: DATE_YYYYMMDD,\n  ZIP_CODE: ZIP_CODE\n};","map":{"version":3,"sources":["Masks.ts"],"names":["BRL_CAR_PLATE","BRL_CNPJ","BRL_CPF","BRL_CPF_CNPJ","text","rawValue","BRL_CURRENCY","createNumberMask","prefix","separator","delimiter","precision","BRL_PHONE","CREDIT_CARD","DATE_DDMMYYYY","DATE_MMDDYYYY","DATE_YYYYMMDD","ZIP_CODE"],"mappings":"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","sourcesContent":["import createNumberMask from './createNumberMask';\nimport type { MaskArray } from './formatWithMask.types';\n\nconst BRL_CAR_PLATE = [/[a-zA-Z]/, /[a-zA-Z]/, /[a-zA-Z]/, '-', /\\d/, /\\w/, /\\d/, /\\d/];\n\nconst BRL_CNPJ = [\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '/',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst BRL_CPF = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '.',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n];\n\nconst BRL_CPF_CNPJ = (text?: string) => {\n  const rawValue = text?.replace(/\\D+/g, '') || '';\n  return rawValue.length <= 11 ? BRL_CPF : BRL_CNPJ;\n};\n\nconst BRL_CURRENCY = createNumberMask({\n  prefix: ['R', '$', ' '],\n  separator: ',',\n  delimiter: '.',\n  precision: 2,\n});\n\nconst BRL_PHONE = [\n  '(',\n  /\\d/,\n  /\\d/,\n  ')',\n  ' ',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  '-',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n];\n\nconst CREDIT_CARD = [\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  ' ',\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  ' ',\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  [/\\d/],\n  ' ',\n  /\\d/,\n  /\\d/,\n  /\\d/,\n  /\\d/,\n] as MaskArray;\n\nconst DATE_DDMMYYYY = [/[0-3]/, /\\d/, '/', /[0-1]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_MMDDYYYY = [/[0-1]/, /\\d/, '/', /[0-3]/, /\\d/, '/', /\\d/, /\\d/, /\\d/, /\\d/];\nconst DATE_YYYYMMDD = [/\\d/, /\\d/, /\\d/, /\\d/, '/', /[0-1]/, /\\d/, '/', /[0-3]/, /\\d/];\nconst ZIP_CODE = [/\\d/, /\\d/, /\\d/, /\\d/, /\\d/, '-', /\\d/, /\\d/, /\\d/];\n\nexport default {\n  BRL_CAR_PLATE,\n  BRL_CNPJ,\n  BRL_CPF,\n  BRL_CPF_CNPJ,\n  BRL_CURRENCY,\n  BRL_PHONE,\n  CREDIT_CARD,\n  DATE_DDMMYYYY,\n  DATE_MMDDYYYY,\n  DATE_YYYYMMDD,\n  ZIP_CODE,\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ResgateInvestimento from \"./ResgateInvestimento\";\nimport { Icon } from 'react-native-elements';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function ListaInvestimento(navigation) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  useEffect(function () {\n    try {\n      fetch('https://run.mocky.io/v3/ca4ec77d-b941-4477-8a7f-95d4daf7a653').then(function (response) {\n        return response.json();\n      }).then(function (json) {\n        return setValue(json.response.data.listaInvestimentos);\n      });\n    } catch (error) {\n      console.error(error);\n    }\n\n    console.log('value', value);\n  }, []);\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(SafeAreaView, {\n      children: _jsxs(ScrollView, {\n        children: [_jsx(View, {\n          style: styles.header,\n          children: _jsx(Text, {\n            style: styles.texto,\n            children: \"Resgate\"\n          })\n        }), _jsxs(View, {\n          children: [_jsxs(View, {\n            style: {\n              flexDirection: 'row',\n              justifyContent: 'space-between'\n            },\n            children: [_jsx(Text, {\n              style: {\n                color: '#4B4B4B',\n                padding: 7,\n                margin: 7\n              },\n              children: \"INVESTIMENTOS\"\n            }), _jsx(Text, {\n              style: {\n                color: '#4B4B4B',\n                padding: 7,\n                margin: 7\n              },\n              children: \"R$\"\n            })]\n          }), value.map(function (dado, i) {\n            return _jsxs(View, {\n              style: {\n                height: 70,\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n                backgroundColor: dado.indicadorCarencia === \"S\" ? '#ffffff' : '#ffffff',\n                marginBottom: 2\n              },\n              onTouchEndCapture: function onTouchEndCapture() {\n                return dado.indicadorCarencia === \"N\" ? navigation.navigation.navigate('ResgateInvestimento', {\n                  dado: dado\n                }) : alert('não é possiel');\n              },\n              children: [_jsxs(Text, {\n                style: {\n                  color: dado.indicadorCarencia === \"S\" ? '#B2B1B1' : '#000000',\n                  padding: 7,\n                  margin: 7,\n                  fontWeight: 'bold',\n                  fontSize: 17\n                },\n                children: [dado.nome, \"\\n\", _jsxs(Text, {\n                  style: {\n                    fontSize: 12,\n                    fontWeight: '100',\n                    color: '#656565'\n                  },\n                  children: [dado.objetivo, \" \"]\n                })]\n              }), _jsx(Text, {\n                style: {\n                  color: dado.indicadorCarencia === \"S\" ? '#B2B1B1' : '#000000',\n                  padding: 7,\n                  margin: 7,\n                  fontWeight: 'bold'\n                },\n                children: dado.saldoTotal.toLocaleString('pt-BR', {\n                  currency: 'BRL'\n                })\n              })]\n            }, i);\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"#eaeaea\",\n    flex: 1,\n    padding: 0,\n    paddingHorizontal: 0,\n    width: '100%'\n  },\n  header: {\n    margin: 0,\n    backgroundColor: '#1e72b0',\n    top: 0,\n    height: 120,\n    width: '100%',\n    borderBottomWidth: 8,\n    borderBottomColor: '#Fdfa5e'\n  },\n  texto: {\n    color: '#fff',\n    textAlign: 'center',\n    marginTop: 60,\n    fontSize: 25,\n    fontWeight: 'bold'\n  },\n  item: {\n    padding: 10,\n    fontSize: 18,\n    height: 44\n  },\n  model: {\n    flexWrap: 'wrap',\n    padding: 0,\n    margin: 10\n  }\n});","map":{"version":3,"sources":["/home/rafadesk/Documentos/Mateus/git/desafio/src/pages/ListaInvestimento.js"],"names":["React","useEffect","useState","NavigationContainer","createNativeStackNavigator","ResgateInvestimento","Icon","Stack","ListaInvestimento","navigation","value","setValue","fetch","then","response","json","data","listaInvestimentos","error","console","log","styles","container","header","texto","flexDirection","justifyContent","color","padding","margin","map","dado","i","height","backgroundColor","indicadorCarencia","marginBottom","navigate","alert","fontWeight","fontSize","nome","objetivo","saldoTotal","toLocaleString","currency","StyleSheet","create","flex","paddingHorizontal","width","top","borderBottomWidth","borderBottomColor","textAlign","marginTop","item","model","flexWrap"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Button, FlatList, SafeAreaView, ScrollView, StyleSheet, Text, View } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport ResgateInvestimento from './ResgateInvestimento'\n\nimport { Icon } from 'react-native-elements';\nconst Stack = createNativeStackNavigator();\n\n\nexport default function ListaInvestimento(navigation) {\n    const [value, setValue] = useState([]);\n\n    useEffect(() => {\n        // console.log(\"navigation\", navigation.navigation)\n        try {\n            fetch('https://run.mocky.io/v3/ca4ec77d-b941-4477-8a7f-95d4daf7a653')\n                .then((response) => response.json())\n                .then((json) => setValue(json.response.data.listaInvestimentos));\n        } catch (error) {\n            console.error(error);\n        }\n        console.log('value',value)\n    }, []);\n\n    return (\n\n        <View style={styles.container}>\n            <SafeAreaView >\n                <ScrollView >\n                    <View style={styles.header}>\n                        <Text style={styles.texto}>Resgate</Text>\n                    </View>\n                    <View >\n                        <View style={{\n                            flexDirection: 'row',\n                            justifyContent: 'space-between',\n                        }}>\n                            <Text style={{ color: '#4B4B4B', padding: 7, margin: 7 }}>INVESTIMENTOS</Text>\n                            <Text style={{ color: '#4B4B4B', padding: 7, margin: 7 }}>R$</Text>\n                        </View>\n\n                        {value.map((dado, i) =>\n                            \n                            <View\n                                key={i}\n                                style={{\n                                    height: 70,\n                                    flexDirection: 'row',\n                                    justifyContent: 'space-between',\n                                    backgroundColor: dado.indicadorCarencia === \"S\"? '#ffffff' : '#ffffff',\n                                    marginBottom: 2\n                                }}\n                                onTouchEndCapture={() =>\n                                    dado.indicadorCarencia === \"N\"?  navigation.navigation.navigate('ResgateInvestimento', { dado } ) : alert('não é possiel')\n                                }\n                            >\n                                <Text style={{\n                                    color:  dado.indicadorCarencia === \"S\" ? '#B2B1B1' : '#000000', \n                                    padding: 7,\n                                    margin: 7,\n                                    fontWeight: 'bold',\n                                    fontSize: 17\n                                }}>\n                                    {dado.nome}{\"\\n\"}\n\n\n\n                                    <Text style={{ fontSize: 12, fontWeight: '100', color: '#656565' }}>{dado.objetivo} </Text>\n                                </Text>\n                                <Text style={{ color: dado.indicadorCarencia === \"S\" ? '#B2B1B1' : '#000000', padding: 7, margin: 7, fontWeight: 'bold' }}>{dado.saldoTotal.toLocaleString('pt-BR', { currency: 'BRL' })}</Text>\n                               \n                            </View>\n                        )}\n                    </View>\n\n                    {/* <Button \n                        title=\"Go to Details\"\n                        onPress={() => navigation.navigate('ResgateInvestimento')}\n                    /> */}\n\n\n\n                </ScrollView>\n            </SafeAreaView>\n        </View>\n\n    );\n}\n\nconst styles = StyleSheet.create({\n    container: {\n        backgroundColor: \"#eaeaea\",\n        flex: 1,\n        padding: 0,\n        paddingHorizontal: 0,\n        width: '100%',\n    },\n    header: {\n        margin: 0,\n        // position: 'absolute',\n        // overflow: 'hidden',\n        backgroundColor: '#1e72b0',\n        top: 0,\n        height: 120,\n        width: '100%',\n        borderBottomWidth: 8,\n        borderBottomColor: '#Fdfa5e'\n    },\n    texto: {\n        color: '#fff',\n        textAlign: 'center',\n        marginTop: 60,\n        fontSize: 25,\n        fontWeight: 'bold'\n    },\n    item: {\n        padding: 10,\n        fontSize: 18,\n        height: 44,\n    },\n    model: {\n        flexWrap: 'wrap',\n        // alignItems: 'flex-start',\n        // flexDirection:'row',\n        padding: 0,\n        margin: 10,\n    },\n\n});\n"]},"metadata":{},"sourceType":"module"}